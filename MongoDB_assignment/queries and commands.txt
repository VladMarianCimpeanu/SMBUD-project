##############################################################################
QUERIES
##############################################################################
1.  given a tax code it returns when the last certificate expires
db.certificates.find(
    {
        'tax_code': "CRTCNF80D66E752L",
        'expiration_date' : {$exists: true}
    },
    {
        'uci': 1,
        'expiration_date': 1
    }
).sort({"expiration_date": -1}).limit(1)

2.  given the UCI of green pass returns the expiration date
db.certificates.find(
    {
        uci: "01ITA797891BBF264E88B9BB8E299440Z0A"
    },
    {
        "expiration_date": 1,
        "_id": 0
    }
)
3.Query to find all the people and their relevant information (uci included) of the certificates generated by an invalid sanitary operator performance in a certain date (period)

db.certificates.find(
    {
        "vaccination.nurse.tax_code": "DRNLLV85E15H839V",
        "vaccination.date": {$gte: ISODate('2021-01-01'), $lte: ISODate('2021-02-01')}
    },
    {
        "_id":0, "name":1,
        "surname":1,
        "tax_code":1,
        "contact":1,
        "uci":1,
        "vaccination.date":1
    }
)

4. Let assume that someone died or is ill. We want to see if there is any correlation between the illness and the
anamnesi of a doctor. This query returns the tax code of the doctor who performed the anamnesi before the last vaccine
dosed to the specific person and the date of the last vaccination.
db.certificates.find(
    {
        "tax_code": $tax_code
    },
    {
        "vaccination.doctor.tax_code": 1,
        "vaccination.date": 1,
        _id: 0
     }
).sort({"vaccination.date": -1}).limit(1)

5. return all the historic(all vaccines and tests) of a given person
db.certificates.find(
    {
        "tax code": "NNCCRS83H27B243L",
    },
    {
        "test": 1,
        "recovery": 1,
        "vaccination": 1,
        "_id": 0
    }
)

6. Query that returns the number of vaccination certificates released in a desired period
db.certificates.countDocuments({"vaccination.date": {$gte: ISODate('2021-01-01'), $lte: ISODate('2021-02-01')}})



##############################################################################
COMMANDS
##############################################################################
1.INSERT VACCINATION FOR ONE PERSON (fields to be inserted are parametrized)

db.certificates.insertOne({
  'name' : $name,
  'surname' : $surname,
  'dob' : $dob,
  'tax_code' : $taxcode,
  'contact' : $contact,
  'emergency_name' : $emname,
  'emergency_contact' : $emcontact,
  'uci' : $uci,
  'vaccination' : {
    'revoked' : False,
    'name' : $vaccname,
    'brand' : $vaccbrand,
    'type' : $type,
    'lot' : $lot,
    'sn' : $sn,
    'dn' : $dn,
    'issuer' : 'Italian Ministry of Health',
    'nurse' : {
      'type' : 'Nurse',
      'name' : $nursname,
      'surname' : $nurssurn,
      'tax_code' : $nurstax,
      'contact' : $nurscont
    },
    'doctor' : {
      'type' : 'Doctor',
      'name' : $doctname,
      'surname' : $doctsurn,
      'tax_code' : $docttax,
      'contact' : $doctcont
    },
    'place': {
      'building_name' : $buildingname,
      'type' : $buildtype,
      'region' : $buildregion,
      'gps' : $buildgps,
      'city' : $buildcity,
      'authorized_by' : $authbody
    },
    'date' : $vaccdate,
    'expiration_date': $vaccexp
  }
})


2.CHANGE EXPIRATION DATE OF CERTIFICATE
In this example we assume that the rules changed and the validity of the second dose of any vaccine is extended by 2 months
db.certificates.updateMany({"vaccination.dn": 2}, [{ $set: { "expiration_date": { $add: ["$expiration_date", 24*3600 * 1000 * 60]}}}])


3. CHANGE REVOKED STATUS OF VACCINES PERFORMED BY A GIVEN NURSE IN A GIVEN DATE
Assuming that it was found out that a no vax nurse dosed fake vaccines in a given date, this command invalidate all the certificates related to
the vaccinations done in that day by that nurse.
db.certificates.updateMany({"vaccination.date": new Date("$YYYY-MM-DD"), "vaccination.nurse.tax_code": "$nurse_tax_code"}, {"$set": {"revoked": true}})



